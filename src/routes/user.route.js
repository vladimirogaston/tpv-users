const express = require('express');
const router = express.Router();
const auth = require('../middleware/authentication.middleware');
const awaitHandlerFactory = require('../middleware/await.handler.factory');
const Role = require('../models/user.roles');
const { createUserSchema, validateLogin } = require('../models/validations/userValidator.middleware');
const validate = require('../middleware/validate.middleware');
const { 
    getAllUsers,
    getUserById,
    createUser,
    userLogin } = require('../controllers/user.controller');

/**
 * @swagger
 * components:
 *   schemas:
 *     User:
 *       type: object
 *       required:
 *         - username
 *         - password
 *         - first_name
 *         - last_name
 *         - email
 *       properties:
 *         id:
 *           type: number
 *           description: The autogenerated id
 *         username:
 *           type: string
 *         password:
 *           type: string
 *         first_name:
 *           type: string
 *         last_name:
 *           type: string
 *         email:
 *           type: string
 *         age:
 *           type: string
 *           description: the user's name
 *       example:
 *         id: 3123
 *         username: vivona
 *         password: munichorro
 *         first_name: vivona
 *         last_name: chorro
 *         email: vivonaje@mail.com
 *         age: 67
 */

/**
 * @swagger
 *   /users:
 *      get:
 *        summary: returns all users
 */
router.get('/', auth(), awaitHandlerFactory(getAllUsers)); // localhost:3000/api/v1/users

router.get('/id/:id', auth(), awaitHandlerFactory(getUserById)); // localhost:3000/api/v1/users/id/1
router.post('/', createUserSchema, validate, awaitHandlerFactory(createUser)); // localhost:3000/api/v1/users
router.post('/login', validateLogin, awaitHandlerFactory(userLogin)); // localhost:3000/api/v1/users/login

module.exports = router;